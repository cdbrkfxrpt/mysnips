priority -50

# license boilerplate snippets
snippet apache "Apache License Boilerplate (apache)"
snippet private "Apache License Boilerplate (private)"
// Copyright 2023 Florian Eich <florian.eich@gmail.com>
//
// This work is licensed under the Apache License, Version 2.0. You should have
// received a copy of this license along with the source code. If that is not
// the case, please find one at http://www.apache.org/licenses/LICENSE-2.0.

$0

endsnippet


// Copyright 2023 bmc::labs GmbH.
//
// Authors:
//   Florian Eich <florian@bmc-labs.com>
//
// This work is licensed under the Apache License, Version 2.0. You should have
// received a copy of this license along with the source code. If that is not
// the case, please find one at http://www.apache.org/licenses/LICENSE-2.0.

$0

endsnippet


snippet mit "MIT License Boilerplate (mit)"
// Copyright 2023 bmc::labs GmbH.
//
// Authors:
//   Florian Eich <florian@bmc-labs.com>
//
// This work is licensed under the MIT License. You should have received a copy
// of this license along with the source code. If that is not the case, please
// find one at https://opensource.org/licenses/MIT.

$0

endsnippet


snippet bmc "bmc::labs Copyright Boilerplate (bmc)"
// Copyright 2023 bmc::labs GmbH.
//
// Authors:
//   Florian Eich <florian@bmc-labs.com>

$0

endsnippet


global !p
from vimsnippets import complete

FIELD_TYPES = [
	'double',
	'float',
	'int32',
	'int64',
	'uint32',
	'uint64',
	'sint32',
	'sint64',
	'fixed32',
	'fixed64',
	'sfixed32',
	'sfixed64',
	'bool',
	'string',
	'bytes']
endglobal

snippet mess "Proto message" b
// ${2:TODO(`whoami`): Describe this message.}
message ${1:Name} {
	$0

	// Next available id: 1
}
endsnippet

snippet reqf "Required field" b
// ${4:TODO(`whoami`): Describe this field.}
optional ${1}`!p snip.rv = complete(t[1], FIELD_TYPES)` ${2:name} = ${3:1};  // Required
endsnippet

snippet optf "Optional field" b
// ${4:TODO(`whoami`): Describe this field.}
optional ${1}`!p snip.rv = complete(t[1], FIELD_TYPES)` ${2:name} = ${3:1};
endsnippet

snippet repf "Repeated field" b
// ${4:TODO(`whoami`): Describe this field.}
repeated ${1}`!p snip.rv = complete(t[1], FIELD_TYPES)` ${2:name} = ${3:1};
endsnippet

snippet enum "Enumeration" b
// ${2:TODO(`whoami`): Describe this enum.}
enum ${1:Name} {
}
endsnippet
